[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# Counterparts counts as original
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = 'return self.base.id'
position = 'at'
match_indent = true
payload = '''
if self.base.id then return math.abs(self.base.id) end
return -9999999
'''

# 0 cards counts in Even Steven scoring
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = 'context.other_card:get_id()%2 == 0'
position = 'at'
match_indent = true
payload = '''
(context.other_card:get_id()%2 == 0 or SMODS.is_zero(context.other_card))
'''

# Counterpart and 0 card descriptions, part 1/3
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "elseif _c.set == 'Enhanced' then"
position = "before"
match_indent = true
payload = '''
if specific_vars.act_as then
    localize{type = 'other', key = 'act_as', nodes = desc_nodes, vars = {specific_vars.act_as}}
end
if specific_vars.default_wild then
    localize{type = 'other', key = 'default_wild', nodes = desc_nodes, vars = {}}
end
'''

# Counterpart and 0 card descriptions, part 2/3
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''
if specific_vars and _c.name ~= 'Stone Card' and specific_vars.nominal_chips then
    localize{type = 'other', key = 'card_chips', nodes = desc_nodes, vars = {specific_vars.nominal_chips}}
end
'''
position = "after"
match_indent = true
payload = '''
if _c.name ~= 'Stone Card' and specific_vars then
    if specific_vars.act_as then
        localize{type = 'other', key = 'act_as', nodes = desc_nodes, vars = {specific_vars.act_as}}
    end
    if specific_vars.default_wild then
        localize{type = 'other', key = 'default_wild', nodes = desc_nodes, vars = {}}
    end
end
'''

# Counterpart and 0 card descriptions, part 3/3
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "bonus_chips = (self.ability.bonus + (self.ability.perma_bonus or 0)) > 0 and (self.ability.bonus + (self.ability.perma_bonus or 0)) or nil,"
position = "after"
match_indent = true
payload = '''
act_as = self.base.value and SMODS.Ranks[self.base.value].counterpart and SMODS.Ranks[self.base.value].counterpart.is and SMODS.Ranks[self.base.value].counterpart.value,
default_wild = SMODS.is_zero(self),
'''

# 0 Card name
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "localize{type = 'other', key = 'playing_card', set = 'Other', nodes = full_UI_table.name, vars = {localize(specific_vars.value, 'ranks'), localize(specific_vars.suit, 'suits_plural'), colours = {specific_vars.colour}}}"
position = "at"
match_indent = true
payload = '''
if specific_vars.value == "showdown_Zero" then
    localize{type = 'other', key = 'playing_card_zero', set = 'Other', nodes = full_UI_table.name, vars = {localize(specific_vars.value, 'ranks')}}
else
    localize{type = 'other', key = 'playing_card', set = 'Other', nodes = full_UI_table.name, vars = {localize(specific_vars.value, 'ranks'), localize(specific_vars.suit, 'suits_plural'), colours = {specific_vars.colour}}}
end
'''

# 0 can't change suit
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if G.STATE == G.STATES.SELECTING_HAND or G.STATE == G.STATES.TAROT_PACK or G.STATE == G.STATES.SPECTRAL_PACK or G.STATE == G.STATES.PLANET_PACK or G.STATE == G.STATES.SMODS_BOOSTER_OPENED then"
position = "before"
match_indent = true
payload = '''
if (self.ability.name == 'The Fool' or self.ability.consumeable.suit_conv) and G.hand and G.hand.highlighted and self.ability.max_highlighted ~= nil and #G.hand.highlighted >= 1 and #G.hand.highlighted <= self.ability.max_highlighted then
    for i=1, #G.hand.highlighted do
        if SMODS.is_zero(G.hand.highlighted[i]) then return false end
    end
end
'''

# 0 count as all suits even when debuffed
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''function Card:is_suit(suit, bypass_debuff, flush_calc)'''
position = "after"
match_indent = true
payload = '''
if SMODS.is_zero(self) then return true end
'''

# Secret ranks counters are not shown if not in deck
[[patches]]
[patches.pattern]
target = '''=[SMODS _ "src/overrides.lua"]'''
pattern = '''if rank_tallies[rank_name_mapping[i]] ~= 0 or not SMODS.Ranks[rank_name_mapping[i]].in_pool or SMODS.Ranks[rank_name_mapping[i]]:in_pool({suit=''}) then'''
position = "at"
match_indent = true
payload = '''
if rank_tallies[rank_name_mapping[i]] ~= 0 or ((not SMODS.Ranks[rank_name_mapping[i]].in_pool or SMODS.Ranks[rank_name_mapping[i]]:in_pool({suit=''})) and not SMODS.Ranks[rank_name_mapping[i]].secret) then
'''

# Secret ranks doesn't appear in challenges Full Deck tab
[[patches]]
[patches.pattern]
target = '''functions/UI_definitions.lua'''
pattern = '''if type(SMODS.Suits[v.suit].in_pool) == 'function' and not SMODS.Suits[v.suit]:in_pool({initial_deck = true, rank = v.value}) then'''
position = "before"
match_indent = true
payload = '''
if SMODS.Ranks[v.value].secret then
    keep = false
end
'''